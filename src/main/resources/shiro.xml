<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--第一步：直接配置一个 securityManager -->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="sessionManager" />
       <property name="realm" ref="MyRealm" />
       <!-- <property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>

    <bean
            class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <bean id="MyRealm" class="com.wzn.bysj.bbs.shiro.MyRealm">
    </bean>

    <!-- <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/>30天
    </bean>

    <bean id="rememberMeManager"
          class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="
       #{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>-->


    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
    <!-- 第三步：把请求路径拦截之后的处理 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--shiro整个的处理，都由securityManger指定和决定 -->
        <property name="securityManager" ref="securityManager" />
        <!-- loginUrl==>如果登录成功，跳转到哪个页面，或者执行哪个请求 -->
        <property name="loginUrl" value="/bbs/login" />
        <!-- 验证通过执行的请求或者跳转 -->
        <!--  <property name="successUrl" value="/WEB-INF/jsp/index.jsp" />-->
          <!-- 验证不通过执行的请求或者跳转 -->
        <property name="unauthorizedUrl" value="/bbs/unauthorized" />
        <!-- 退出 -->
        <property name="filters">
            <util:map>
                <entry key="logout" value-ref="logoutFilter" />
            </util:map>
        </property>

        <!-- 具体的拦截路径和拦截的方式和角色和权限的范围 -->
        <property name="filterChainDefinitions">
            <value>
                /bbs/login =anon
                /bbs/logout=logout
                /bss/user/** =user
                /bbs/unauthorized=anon
                /bbs/userexist=anon
                /bbs/register=anon
                /statics/** = anon
                /** =anon
            </value>
        </property>
    </bean>


    <!-- 退出过滤器 -->
    <bean id="logoutFilter" class="com.wzn.bysj.bbs.shiro.SystemLogoutFilter">
        <property name="redirectUrl" value="/bbs/index" />
    </bean>


    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">

        <property name="sessionDAO" ref="sessionDAO" />

    </bean>

    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" >

    </bean>


    <!-- 配置启用Shiro的注解功能 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


</beans>
